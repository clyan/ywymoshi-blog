(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{525:function(v,_,l){"use strict";l.r(_);var t=l(6),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h2",{attrs:{id:"typeof"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[v._v("#")]),v._v(" typeof")]),v._v(" "),l("ul",[l("li",[v._v("对于原始类型来说(也就是number、string这种)，除了null都可以显示正确的类型")]),v._v(" "),l("li",[v._v('null因为历史版本的原因被错误的判断为了"object"')]),v._v(" "),l("li",[v._v('对于引用类型来说(也就是object、array这种)，除了函数都会显示为"object"')]),v._v(" "),l("li",[v._v("函数会被显示为function")])]),v._v(" "),l("h2",{attrs:{id:"原始类型转换"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#原始类型转换"}},[v._v("#")]),v._v(" 原始类型转换")]),v._v(" "),l("h3",{attrs:{id:"布尔类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型"}},[v._v("#")]),v._v(" 布尔类型")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("原始值---\x3e布尔值")]),v._v(" "),l("ul",[l("li",[v._v("true")]),v._v(" "),l("li",[v._v("false\n"),l("ul",[l("li",[l("p",[v._v("false")])]),v._v(" "),l("li",[l("p",[v._v("undefined")])]),v._v(" "),l("li",[l("p",[v._v("null")])]),v._v(" "),l("li",[l("p",[v._v("+0")])]),v._v(" "),l("li",[l("p",[v._v("-0")])]),v._v(" "),l("li",[l("p",[v._v("NaN")])]),v._v(" "),l("li",[l("p",[v._v('"" (空字符串)')])]),v._v(" "),l("li",[l("p",[v._v("空参")])]),v._v(" "),l("li",[l("p",[v._v("document.all")]),v._v(" "),l("ul",[l("li",[v._v("非IE下用type 转换为undefined 故为false")])])])])])])])]),v._v(" "),l("h3",{attrs:{id:"字符串"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[v._v("#")]),v._v(" 字符串")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("原始值---\x3e字符串")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("undefined")]),v._v(" "),l("ul",[l("li",[v._v('"undefined"')])])]),v._v(" "),l("li",[l("p",[v._v("null")]),v._v(" "),l("ul",[l("li",[v._v('"null"')])])]),v._v(" "),l("li",[l("p",[v._v("Boolean")]),v._v(" "),l("ul",[l("li",[v._v('"true"')]),v._v(" "),l("li",[v._v('"false"')])])]),v._v(" "),l("li",[l("p",[v._v("Symbol")]),v._v(" "),l("ul",[l("li",[v._v("“Symbol()”")])])]),v._v(" "),l("li",[l("p",[v._v("数字类型")]),v._v(" "),l("ul",[l("li",[v._v("正常数字 返回 双引号+数字")]),v._v(" "),l("li",[v._v("NaN 返回引号+NaN")])])]),v._v(" "),l("li",[l("p",[v._v("字符类型")]),v._v(" "),l("ul",[l("li",[v._v("返回与之相等的值")])])])])])]),v._v(" "),l("h3",{attrs:{id:"数字类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数字类型"}},[v._v("#")]),v._v(" 数字类型")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("原始值---\x3e数字")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("undefined")]),v._v(" "),l("ul",[l("li",[v._v("NaN")])])]),v._v(" "),l("li",[l("p",[v._v("Null")]),v._v(" "),l("ul",[l("li",[v._v("+0")])])]),v._v(" "),l("li",[l("p",[v._v("布尔值")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("ture")]),v._v(" "),l("ul",[l("li",[v._v("1")])])]),v._v(" "),l("li",[l("p",[v._v("false")]),v._v(" "),l("ul",[l("li",[v._v("+0")])])])])]),v._v(" "),l("li",[l("p",[v._v("Symbol")]),v._v(" "),l("ul",[l("li",[v._v("报错")])])]),v._v(" "),l("li",[l("p",[v._v("字符串")]),v._v(" "),l("ul",[l("li",[v._v("纯数字能转换")]),v._v(" "),l("li",[v._v("其余为NaN")])])])])]),v._v(" "),l("li",[l("p",[v._v("转换函数")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("parseInt(parseFolat)")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("如果字符串以0x或者0X开头的话")]),v._v(" "),l("ul",[l("li",[v._v("parseInt 先将其以16进制的规则转换为十进制")]),v._v(" "),l("li",[v._v("0")])])]),v._v(" "),l("li",[l("p",[v._v("会尽可能多的解析数字字符")])]),v._v(" "),l("li",[l("p",[v._v("跳过开头任意数量的空格")])])])])])])]),v._v(" "),l("h3",{attrs:{id:"转换对象"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#转换对象"}},[v._v("#")]),v._v(" 转换对象")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("基本类型包装类")]),v._v(" "),l("ul",[l("li",[v._v("使用typeof检测它，结果是object，说明它是一个对象")]),v._v(" "),l("li",[v._v("使用toString()调用的时候返回的是原始值的字符串")])])]),v._v(" "),l("li",[l("p",[v._v("能用new调用")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("用new调用后创建 一个基本类型包装类")]),v._v(" "),l("ul",[l("li",[v._v("console.log(new Number(1)); // Number{1}")])])]),v._v(" "),l("li",[l("p",[v._v("String")])]),v._v(" "),l("li",[l("p",[v._v("Number")])]),v._v(" "),l("li",[l("p",[v._v("Boolean")])])])]),v._v(" "),l("li",[l("p",[v._v("不能用new调用")]),v._v(" "),l("ul",[l("li",[v._v("Symbol")]),v._v(" "),l("li",[v._v("BigInt")])])]),v._v(" "),l("li",[l("p",[v._v("更推荐 new Object来创建")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("undefined")]),v._v(" "),l("ul",[l("li",[v._v("返回为空")])])]),v._v(" "),l("li",[l("p",[v._v("null")]),v._v(" "),l("ul",[l("li",[v._v("返回为空")])])])])])]),v._v(" "),l("h2",{attrs:{id:"三大方法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#三大方法"}},[v._v("#")]),v._v(" 三大方法")]),v._v(" "),l("h3",{attrs:{id:"tostring"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[v._v("#")]),v._v(" toString")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("特性")]),v._v(" "),l("ul",[l("li",[v._v("其他数据类型（除了null、undefined）外 构造函数的原型对象上都有toString（）方法")]),v._v(" "),l("li",[v._v("基本数据类型构造函数原型对象上的toString()方法会覆盖Object 原型上的方法")])])]),v._v(" "),l("li",[l("p",[v._v("调用")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("除了null、undefined外的类型均可调用")])]),v._v(" "),l("li",[l("p",[v._v("数字调用中的有趣现象")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("n.toString")]),v._v(" "),l("ul",[l("li",[v._v("系统会把n和点看做一个整体 从而导致调用错误")]),v._v(" "),l("li",[v._v("多加一个点即可避免")])])])])]),v._v(" "),l("li",[l("p",[v._v("call调用")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("Object.prototype.toString")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("返回字符串")]),v._v(" "),l("ul",[l("li",[l("p",[v._v('"[object " 和 class 和 "]"')]),v._v(" "),l("ul",[l("li",[l("p",[v._v("object")])]),v._v(" "),l("li",[l("p",[v._v("class")]),v._v(" "),l("ul",[l("li",[v._v("类")])])])])])])]),v._v(" "),l("li",[l("p",[v._v("获取内部属性[[class]]")])])])])])])])]),v._v(" "),l("li",[l("p",[v._v("基本类型调用toString方法原理")]),v._v(" "),l("ul",[l("li",[v._v("把原始值转换为字符串")]),v._v(" "),l("li",[v._v("创建Object实例  讲 值变为基本类型包装对象")]),v._v(" "),l("li",[v._v("调用实例方法toString")]),v._v(" "),l("li",[v._v("用后销毁")])])]),v._v(" "),l("li",[l("p",[v._v("引用类型调用toString")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("数组")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("先转换")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("再相连")]),v._v(" "),l("ul",[l("li",[v._v("[{ name: 'obj' },1]=\"[object,object],1\"")])])]),v._v(" "),l("li",[l("p",[v._v('将每一项转换为字符串然后再用","连接')]),v._v(" "),l("ul",[l("li",[v._v("空数组返回空字符串")])])]),v._v(" "),l("li",[l("p",[v._v("相连部分隐式调用 数组join函数 可重写")]),v._v(" "),l("ul",[l("li",[v._v("如果同时重写了toString及join  优先采用toString")])])])])])])]),v._v(" "),l("li",[l("p",[v._v("普通的对象(比如{name: 'obj'}这种)")]),v._v(" "),l("ul",[l("li",[v._v('"[object Object]"')])])]),v._v(" "),l("li",[l("p",[v._v("函数(class)、正则")]),v._v(" "),l("ul",[l("li",[v._v("源代码字符串")])])]),v._v(" "),l("li",[l("p",[v._v("日期")]),v._v(" "),l("ul",[l("li",[v._v("本地时区的日期字符串")])])]),v._v(" "),l("li",[l("p",[v._v("原始值的包装对象（Boolean{true}")]),v._v(" "),l("ul",[l("li",[v._v("返回原始值的字符串")])])]),v._v(" "),l("li",[l("p",[v._v("weak/Map、Set、Promise")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("返回 object+类型")]),v._v(" "),l("ul",[l("li",[v._v('console.log(new Map().toString()) // "[object Map]"')]),v._v(" "),l("li",[v._v('console.log(new Set().toString()) // "[object Set]"')]),v._v(" "),l("li",[v._v('console.log(Promise.resolve().toString()) // "[object Promise]"')])])])])])])]),v._v(" "),l("li",[l("p",[v._v("instanceof 增强版")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("Object.prototype.toString")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("对于各个类型的输出为 object+类型")]),v._v(" "),l("ul",[l("li",[v._v("对于 number 类型，结果是 [object Number]")]),v._v(" "),l("li",[v._v("对于 boolean 类型，结果是 [object Boolean]")]),v._v(" "),l("li",[v._v("对于 null：[object Null]")]),v._v(" "),l("li",[v._v("对于 undefined：[object Undefined]")]),v._v(" "),l("li",[v._v("对于数组：[object Array]")])])])])])])]),v._v(" "),l("li",[l("p",[v._v("自定义toString的方法的输出")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("特殊对象属性[Symbol.toStringTag]")]),v._v(" "),l("div",{staticClass:"language-js line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-js"}},[l("code",[l("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("let")]),v._v(" user "),l("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("Symbol"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("toStringTag"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),l("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),l("span",{pre:!0,attrs:{class:"token string"}},[v._v('"User"')]),v._v("\n"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),l("span",{pre:!0,attrs:{class:"token function"}},[v._v("alert")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v(" "),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),l("span",{pre:!0,attrs:{class:"token function"}},[v._v("toString")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),l("span",{pre:!0,attrs:{class:"token function"}},[v._v("call")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("user"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),l("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// [object User]")]),v._v("\n")])]),v._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[v._v("1")]),l("br"),l("span",{staticClass:"line-number"},[v._v("2")]),l("br"),l("span",{staticClass:"line-number"},[v._v("3")]),l("br"),l("span",{staticClass:"line-number"},[v._v("4")]),l("br")])])])])])]),v._v(" "),l("h3",{attrs:{id:"valueof"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#valueof"}},[v._v("#")]),v._v(" valueOf")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("把对象转换成一个基本数据的值。")])]),v._v(" "),l("li",[l("p",[v._v("基本类型调用valueOf")]),v._v(" "),l("ul",[l("li",[v._v("返回调用者本身的值")])])]),v._v(" "),l("li",[l("p",[v._v("引用类型调用")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("日期对象")]),v._v(" "),l("ul",[l("li",[v._v("时间戳")])])]),v._v(" "),l("li",[l("p",[v._v("非日期对象")]),v._v(" "),l("ul",[l("li",[v._v("对象本身")])])])])])]),v._v(" "),l("h3",{attrs:{id:"toprimitive"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#toprimitive"}},[v._v("#")]),v._v(" toPrimitive")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("最高优先级")]),v._v(" "),l("ul",[l("li",[v._v("重写了它的话，那么甚至都不会执行重写的toString()和valueOf()了")])])]),v._v(" "),l("li",[l("p",[v._v("语法")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("ToPrimitive(input,preferredType?)")])]),v._v(" "),l("li",[l("p",[v._v("参数")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("input")]),v._v(" "),l("ul",[l("li",[v._v("要处理的值")])])]),v._v(" "),l("li",[l("p",[v._v("PreferredType（非必填)")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("期望转换的类型")])]),v._v(" "),l("li",[l("p",[v._v("可选值")]),v._v(" "),l("ul",[l("li",[v._v("Number")]),v._v(" "),l("li",[v._v("String")])])])])])])])])]),v._v(" "),l("li",[l("p",[v._v("处理特性")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("不传PreferredType")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("传入值是日期类型")]),v._v(" "),l("ul",[l("li",[v._v("用string方式去处理")])])]),v._v(" "),l("li",[l("p",[v._v("非日期形式")]),v._v(" "),l("ul",[l("li",[v._v("Number")])])])])]),v._v(" "),l("li",[l("p",[v._v("处理值的值为对象")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("preferred为Number")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("先调用valueOf")]),v._v(" "),l("ul",[l("li",[v._v("如果结果是原始值就返回")])])]),v._v(" "),l("li",[l("p",[v._v("再调用 toString")]),v._v(" "),l("ul",[l("li",[v._v("如果是原始值就返回")])])]),v._v(" "),l("li",[l("p",[v._v("抛出类型错误的异常")])])])]),v._v(" "),l("li",[l("p",[v._v("preferred为 String")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("调用 toString")]),v._v(" "),l("ul",[l("li",[v._v("如果是原始值就返回")])])]),v._v(" "),l("li",[l("p",[v._v("调用valueOf")]),v._v(" "),l("ul",[l("li",[v._v("如果结果是原始值就返回")])])]),v._v(" "),l("li",[l("p",[v._v("抛出类型错误的异常")])])])])])])])])]),v._v(" "),l("h2",{attrs:{id:"处理流程总结"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#处理流程总结"}},[v._v("#")]),v._v(" 处理流程总结")]),v._v(" "),l("h3",{attrs:{id:"对象-字符串"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#对象-字符串"}},[v._v("#")]),v._v(" 对象--\x3e字符串")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("判断对象是否有toString方法")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("调用方法")]),v._v(" "),l("ul",[l("li",[v._v("返回原始值泽转换为字符串返回")]),v._v(" "),l("li",[v._v("不返回原始值")])])]),v._v(" "),l("li",[l("p",[v._v("无toString方法")])])])]),v._v(" "),l("li",[l("p",[v._v("调用valueOf")]),v._v(" "),l("ul",[l("li",[v._v("返回原始值泽转换为字符串返回")]),v._v(" "),l("li",[v._v("无法获得原始值")])])]),v._v(" "),l("li",[l("p",[v._v("抛出类型错误异常")])])]),v._v(" "),l("h3",{attrs:{id:"对象-数字"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#对象-数字"}},[v._v("#")]),v._v(" 对象---\x3e数字")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("是否有valueOf方法")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("调用方法")]),v._v(" "),l("ul",[l("li",[v._v("返回原始值转换为数字 最终结果")]),v._v(" "),l("li",[v._v("非原始值")])])]),v._v(" "),l("li",[l("p",[v._v("无方法")])])])]),v._v(" "),l("li",[l("p",[v._v("调用toString方法")]),v._v(" "),l("ul",[l("li",[v._v("返回原始值  转换为数字类型返回")]),v._v(" "),l("li",[v._v("非原始值")])])]),v._v(" "),l("li",[l("p",[v._v("抛出类型错误异常")])])]),v._v(" "),l("h2",{attrs:{id:"比较"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#比较"}},[v._v("#")]),v._v(" == 比较")]),v._v(" "),l("h3",{attrs:{id:"类型相等-比较值"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#类型相等-比较值"}},[v._v("#")]),v._v(" 类型相等 比较值")]),v._v(" "),l("h3",{attrs:{id:"类型均为基本数据类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#类型均为基本数据类型"}},[v._v("#")]),v._v(" 类型均为基本数据类型")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("null和undefined")]),v._v(" "),l("ul",[l("li",[v._v("undefined派生于null")]),v._v(" "),l("li",[v._v("null==null")]),v._v(" "),l("li",[v._v("null==undefined")])])]),v._v(" "),l("li",[l("p",[v._v("一方为String")]),v._v(" "),l("ul",[l("li",[v._v("String转为Number比较")])])]),v._v(" "),l("li",[l("p",[v._v("一方为Boolean")]),v._v(" "),l("ul",[l("li",[v._v("Boolean转为Number比较")])])])]),v._v(" "),l("h3",{attrs:{id:"有引用类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#有引用类型"}},[v._v("#")]),v._v(" 有引用类型")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("两方都是引用类型")]),v._v(" "),l("ul",[l("li",[v._v("判断是否指向同一个地址")])])]),v._v(" "),l("li",[l("p",[v._v("一方是")]),v._v(" "),l("ul",[l("li",[v._v("ToNumber的形式转换 进行比较")])])])]),v._v(" "),l("h3",{attrs:{id:"特殊"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#特殊"}},[v._v("#")]),v._v(" 特殊")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("NaN")]),v._v(" "),l("ul",[l("li",[v._v("Object.is(NaN, NaN)=ture")]),v._v(" "),l("li",[v._v("其他情况均为false")])])])]),v._v(" "),l("h3",{attrs:{id:"加上运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#加上运算符"}},[v._v("#")]),v._v(" 加上运算符")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("!")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("最先把!后面的值转换为布尔值来运算")]),v._v(" "),l("ul",[l("li",[v._v("再把布尔值转换为number")])])])])])]),v._v(" "),l("h3",{attrs:{id:"整合图"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#整合图"}},[v._v("#")]),v._v(" 整合图")]),v._v(" "),l("ul",[l("li")]),v._v(" "),l("h2",{attrs:{id:"运算符-的类型转换"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#运算符-的类型转换"}},[v._v("#")]),v._v(" 运算符（+ - * / %）的类型转换")]),v._v(" "),l("h3",{attrs:{id:""}},[l("a",{staticClass:"header-anchor",attrs:{href:"#"}},[v._v("#")]),v._v(" - * / %")]),v._v(" "),l("ul",[l("li",[v._v("把符号两边转成数字来进行运算")])]),v._v(" "),l("h3",{attrs:{id:"-2"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[v._v("#")]),v._v(" +")]),v._v(" "),l("ul",[l("li",[v._v("两端都是数字则进行数字运算")]),v._v(" "),l("li",[v._v("有一端是字符串 会把另一端转换为字符串")])]),v._v(" "),l("h3",{attrs:{id:"对象的-号类型转换"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#对象的-号类型转换"}},[v._v("#")]),v._v(" 对象的+号类型转换")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("toPrimitive的参数hint为default")]),v._v(" "),l("ul",[l("li",[v._v("先判断有没有valueOf")]),v._v(" "),l("li",[v._v("如果没有或者返回值非原始值 则进行toString")])])]),v._v(" "),l("li",[l("p",[v._v("日期在进行+号字符串连接的时候 优先调用toString()方法")])]),v._v(" "),l("li",[l("p",[v._v("+变量名")]),v._v(" "),l("ul",[l("li",[v._v("是转换其他对象到数值的最快方法")])])])])])}),[],!1,null,null,null);_.default=i.exports}}]);