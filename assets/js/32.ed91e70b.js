(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{542:function(T,t,v){"use strict";v.r(t);var _=v(6),p=Object(_.a)({},(function(){var T=this,t=T.$createElement,v=T._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":T.$parent.slotKey}},[v("blockquote",[v("p",[T._v("尽量规避TCP慢启动与竞争固定带宽，")]),T._v(" "),v("p",[T._v("HTTP/2 的思路就是一个域名只使用一个 TCP 长连接来传输数据，这样整个页面资源的下载过程只需要一次慢启动，同时也避免了多个 TCP 连接竞争带宽所带来的问题")])]),T._v(" "),v("p",[T._v("HTTP 协议取消了小版本号，所以 HTTP/2 的正式名字不是 2.0；")]),T._v(" "),v("p",[T._v("HTTP/2 在“语义”上兼容 HTTP/1，保留了请求方法、URI 等传统概念；")]),T._v(" "),v("p",[T._v("HTTP/2 使用“HPACK”算法压缩头部信息，消除冗余数据节约带宽；")]),T._v(" "),v("p",[T._v("HTTP/2 的消息不再是“Header+Body”的形式，而是分散为多个二进制“帧”；")]),T._v(" "),v("p",[T._v("HTTP/2 使用虚拟的“流”传输消息，解决了困扰多年的“队头阻塞”问题，同时实现了“多路复用”，提高连接的利用率；")]),T._v(" "),v("p",[T._v("HTTP/2 也增强了安全性，要求至少是 TLS1.2，而且禁用了很多不安全的密码套件")]),T._v(" "),v("p",[T._v("服务器推送：除了设置请求的优先级外，HTTP/2 还可以直接将数据提前推送到浏览器。你可以想象这样一个场景，当用户请求一个 HTML 页面之后，服务器知道该 HTML 页面会引用几个重要的 JavaScript 文件和 CSS 文件，那么在接收到 HTML 请求之后，附带将要使用的 CSS 文件和 JavaScript 文件一并发送给浏览器，这样当浏览器解析完 HTML 文件之后，就能直接拿到需要的 CSS 文件和 JavaScript 文件，这对首次打开页面的速度起到了至关重要的作用。")]),T._v(" "),v("p",[v("strong",[T._v("存在问题：")])]),T._v(" "),v("ul",[v("li",[T._v("TCP队头阻塞：当丢包率大于2%，传输效率甚至比http1.1还慢")])])])}),[],!1,null,null,null);t.default=p.exports}}]);