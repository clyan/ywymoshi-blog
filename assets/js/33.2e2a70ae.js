(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{530:function(v,_,t){"use strict";t.r(_);var r=t(6),a=Object(r.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("blockquote",[t("p",[v._v("引入安全层SSL/TSL, 对发起 HTTP 请求的数据进行加密操作和对接收到 HTTP 的内容进行解密操作")])]),v._v(" "),t("h1",{attrs:{id:"第一版-对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一版-对称加密"}},[v._v("#")]),v._v(" 第一版：对称加密")]),v._v(" "),t("blockquote",[t("p",[v._v("对称加密是指加密和解密都使用的是相同的密钥")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("浏览器发送"),t("code",[v._v("加密套件列表和client-random")]),v._v("给服务端")])]),v._v(" "),t("li",[t("p",[v._v("服务端发送"),t("code",[v._v("加密套件和server-random")]),v._v("给浏览器")])]),v._v(" "),t("li",[t("p",[v._v("浏览器与服务端确认消息，分别根据加密套件与client-random、server-random 生成相同的密钥。")])])]),v._v(" "),t("p",[t("strong",[v._v("存在问题：")])]),v._v(" "),t("p",[v._v("传输 client-random 和 service-random 的过程却是明文的。意味着黑客也可以拿到协商的加密套件和双方的随机数，由于利用随机数合成密钥的算法是公开的，所以黑客拿到随机数之后，也可以合成密钥，这样数据依然可以被破解，那么黑客也就可以使用密钥来伪造或篡改数据了。")]),v._v(" "),t("h1",{attrs:{id:"第二版-非对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二版-非对称加密"}},[v._v("#")]),v._v(" 第二版：非对称加密")]),v._v(" "),t("blockquote",[t("p",[v._v("非对称加密算法有 A、B 两把密钥，如果你用 A 密钥来加密，那么只能使用 B 密钥来解密；反过来，如果你要 B 密钥来加密，那么只能用 A 密钥来解密")])]),v._v(" "),t("ol",[t("li",[v._v("首先浏览器发送加密套件列表给服务器")]),v._v(" "),t("li",[v._v("服务端发送"),t("code",[v._v("加密套件和公钥")]),v._v("给客户端")]),v._v(" "),t("li",[v._v("最后就是浏览器和服务器返回确认消息。")])]),v._v(" "),t("p",[v._v("浏览器使用公钥加密数据，服务端使用私钥进行解密，即使黑客截获了公钥和数据，也无法使用公钥解密")]),v._v(" "),t("p",[t("strong",[v._v("存在问题：")])]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("第一个是非对称加密的效率太低")]),v._v("。这会严重影响到加解密数据的速度，进而影响到用户打开页面的速度。")]),v._v(" "),t("li",[t("strong",[v._v("第二个是无法保证服务器发送给浏览器的数据安全")]),v._v(" 虽然浏览器端可以使用公钥来加密，但是服务器端只能采用私钥来加密，私钥加密只有公钥能解密，但黑客也是可以获取得到公钥的，这样就不能保证服务器端数据的安全了。")])]),v._v(" "),t("h1",{attrs:{id:"第三版-对称加密和非对称加密搭配及证书使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三版-对称加密和非对称加密搭配及证书使用"}},[v._v("#")]),v._v(" 第三版：对称加密和非对称加密搭配及证书使用")]),v._v(" "),t("p",[t("strong",[v._v("证书验证阶段：")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("1）浏览器发起 HTTPS 请求；")])]),v._v(" "),t("li",[t("p",[v._v("2）服务端返回 HTTPS 证书；")])]),v._v(" "),t("li",[t("p",[v._v("3）客户端验证证书是否合法，如果不合法则提示告警。")]),v._v(" "),t("p",[t("strong",[v._v("数据传输阶段：")])])]),v._v(" "),t("li",[t("p",[v._v("1）当证书验证合法后，在本地生成随机数；")])]),v._v(" "),t("li",[t("p",[v._v("2）通过公钥加密随机数，并把加密后的随机数传输到服务端；")])]),v._v(" "),t("li",[t("p",[v._v("3）服务端通过私钥对随机数进行解密；")])]),v._v(" "),t("li",[t("p",[v._v("4）服务端通过客户端传入的随机数构造对称加密算法，对返回结果内容进行加密后传输。")])])]),v._v(" "),t("p",[v._v("主要是通过公钥加密"),t("code",[v._v("客户端的随机数")]),v._v("，然后发送给服务端，服务端根据这个随机数构造对称加密算法。")]),v._v(" "),t("p",[t("strong",[v._v("总结：")]),v._v(" "),t("strong",[v._v("非对称加密 对称加密")]),v._v("，保证对称密钥的安全。")]),v._v(" "),t("p",[t("strong",[v._v("存在问题：")]),v._v("  黑客进行DNS劫持")]),v._v(" "),t("ul",[t("li",[v._v("1）本地请求被劫持（如DNS劫持等），所有请求均发送到中间人的服务器；")]),v._v(" "),t("li",[v._v("2）中间人服务器返回中间人自己的证书；")]),v._v(" "),t("li",[v._v("3）客户端创建随机数，通过中间人证书的公钥对随机数加密后传送给中间人，然后凭随机数构造对称加密对传输内容进行加密传输；")]),v._v(" "),t("li",[v._v("4）中间人因为拥有客户端的随机数，可以通过对称加密算法进行内容解密；")]),v._v(" "),t("li",[v._v("5）中间人以客户端的请求内容再向正规网站发起请求；")]),v._v(" "),t("li",[v._v("6）因为中间人与服务器的通信过程是合法的，正规网站通过建立的安全通道返回加密后的数据；")]),v._v(" "),t("li",[v._v("7）中间人凭借与正规网站建立的对称加密算法对内容进行解密；")]),v._v(" "),t("li",[v._v("8）中间人通过与客户端建立的对称加密算法对正规内容返回的数据进行加密传输；")]),v._v(" "),t("li",[v._v("9）客户端通过与中间人建立的对称加密算法对返回结果数据进行解密。")])]),v._v(" "),t("p",[t("strong",[v._v("由于缺少对证书的验证，所以客户端虽然发起的是 HTTPS 请求，但客户端完全不知道自己的网络已被拦截，传输内容被中间人全部窃取。")])]),v._v(" "),t("p",[t("strong",[v._v("浏览器确保 CA 证书的合法性")])]),v._v(" "),t("p",[t("strong",[v._v("证书包含：")]),v._v(" 1）颁发机构信息；2）公钥；3）公司信息；4）域名；5）有效期；6）指纹；7）......")]),v._v(" "),t("p",[t("strong",[v._v("证书的合法性依据：")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("首先：权威机构是要有认证的，不是随便一个机构都有资格颁发证书，不然也不叫做权威机构；")])]),v._v(" "),t("li",[t("p",[v._v("另外：证书的可信性基于信任制，权威机构需要对其颁发的证书进行信用背书，只要是权威机构生成的证书，我们就认为是合法的。")]),v._v(" "),t("blockquote",[t("p",[v._v("所以权威机构会对申请者的信息进行审核，不同等级的权威机构对审核的要求也不一样，于是证书也分为免费的、便宜的和贵的。")])])])]),v._v(" "),t("p",[t("strong",[v._v("浏览器验证证书的合法性:")])]),v._v(" "),t("ul",[t("li",[v._v("1）验证域名、有效期等信息是否正确：证书上都有包含这些信息，比较容易完成验证；")]),v._v(" "),t("li",[v._v("2）判断证书来源是否合法：每份签发证书都可以根据验证链查找到对应的根证书，操作系统、浏览器会在本地存储权威机构的根证书，利用本地根证书可以对对应机构签发证书完成来源验证")]),v._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[v._v("判断证书是否被篡改：需要与 CA 服务器进行校验；")])])]),v._v(" "),t("li",[v._v("4）判断证书是否已吊销：通过CRL（Certificate Revocation List 证书注销列表）和 OCSP（Online Certificate Status Protocol 在线证书状态协议）实现，其中 OCSP 可用于第3步中以减少与 CA 服务器的交互，提高验证效率。")])]),v._v(" "),t("h1",{attrs:{id:"既然证书是公开的-如果要发起中间人攻击-我在官网上下载一份证书作为我的服务器证书-那客户端肯定会认同这个证书是合法的-如何避免这种证书冒用的情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#既然证书是公开的-如果要发起中间人攻击-我在官网上下载一份证书作为我的服务器证书-那客户端肯定会认同这个证书是合法的-如何避免这种证书冒用的情况"}},[v._v("#")]),v._v(" 既然证书是公开的，如果要发起中间人攻击，我在官网上下载一份证书作为我的服务器证书，那客户端肯定会认同这个证书是合法的，如何避免这种证书冒用的情况？")]),v._v(" "),t("p",[v._v("其实这就是非加密对称中公私钥的用处，虽然中间人可以得到证书，但私钥是无法获取的，一份公钥是不可能推算出其对应的私钥，中间人即使拿到证书也无法伪装成合法服务端，因为无法对客户端传入的加密数据进行解密。")]),v._v(" "),t("h1",{attrs:{id:"只有认证机构可以生成证书吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#只有认证机构可以生成证书吗"}},[v._v("#")]),v._v(" 只有认证机构可以生成证书吗？")]),v._v(" "),t("p",[v._v("如果需要浏览器不提示安全风险，那只能使用认证机构签发的证书。但浏览器通常只是提示安全风险，并不限制网站不能访问，所以从技术上谁都可以生成证书，只要有证书就可以完成网站的 HTTPS 传输。")]),v._v(" "),t("h1",{attrs:{id:"本地随机数被窃取怎么办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地随机数被窃取怎么办"}},[v._v("#")]),v._v(" 本地随机数被窃取怎么办?")]),v._v(" "),t("p",[v._v("证书验证是采用非对称加密实现，但是传输过程是采用对称加密，而其中对称加密算法中重要的随机数是由本地生成并且存储于本地的，HTTPS 如何保证随机数不会被窃取？")]),v._v(" "),t("p",[v._v("其实 HTTPS 并不包含对随机数的安全保证，HTTPS 保证的只是传输过程安全，而随机数存储于本地，本地的安全属于另一安全范畴，应对的措施有安装杀毒软件、反木马、浏览器升级修复漏洞等。")]),v._v(" "),t("h1",{attrs:{id:"用了-https-会被抓包吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用了-https-会被抓包吗"}},[v._v("#")]),v._v(" 用了 HTTPS 会被抓包吗？")]),v._v(" "),t("p",[v._v("HTTPS 的数据是加密的，常规下抓包工具代理请求后抓到的包内容是加密状态，无法直接查看。")]),v._v(" "),t("p",[v._v("但是，正如前文所说，浏览器只会提示安全风险，如果用户授权仍然可以继续访问网站，完成请求。因此，只要客户端是我们自己的终端，我们授权的情况下，便可以组建中间人网络，而抓包工具便是作为中间人的代理。通常 HTTPS 抓包工具的使用方法是会生成一个证书，用户需要手动把证书安装到客户端中，然后终端发起的所有请求通过该证书完成与抓包工具的交互，然后抓包工具再转发请求到服务器，最后把服务器返回的结果在控制台输出后再返回给终端，从而完成整个请求的闭环。")]),v._v(" "),t("h1",{attrs:{id:"既然-https-不能防抓包-那-https-有什么意义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#既然-https-不能防抓包-那-https-有什么意义"}},[v._v("#")]),v._v(" 既然 HTTPS 不能防抓包，那 HTTPS 有什么意义？")]),v._v(" "),t("blockquote",[t("p",[v._v("HTTPS 可以防止用户在不知情的情况下通信链路被监听，对于主动授信的抓包操作是不提供防护的，因为这个场景用户是已经对风险知情。要防止被抓包，需要采用应用级的安全防护，例如采用私有的对称加密，同时做好移动端的防反编译加固，防止本地算法被破解。")])]),v._v(" "),t("h1",{attrs:{id:"文章来源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文章来源"}},[v._v("#")]),v._v(" 文章来源")]),v._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/96494976",target:"_blank",rel:"noopener noreferrer"}},[v._v("你知道，HTTPS用的是对称加密还是非对称加密？"),t("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=a.exports}}]);